// This interfae defines the structure of a Booking object.
// In other words, it reflects exactly what a client entry
// looks like in the PostgreSQL database. (One of the entries that
// gets returned from "SELECT * FROM bookings").

export interface Booking {
  // id is a number automatically generated by PostgreSQL (serial primary key)
  id: number;

  // client_id is a foreign key that references an id (number) from the Clients table in PostgreSQL (serial primary key)
  client_id: number;

  // event_date is a TIMESTAMP in SQL; would be a string in typescript
  event_date: string;

  // event_type is a VARCHAR in SQL; its equivalent in typescript is a string
  event_type: string;

  // price is a NUMERIC(10, 2) in SQL; its equivalent in typescript is a number
  price: number;

  // enforced by CHECK constraint (this will be set in the dto file)
  status: "pending" | "confirmed" | "completed" | "cancelled";

  // TIMESTAMP, default NOW()
  created_at: string;

  // TIMESTAMP, default NOW()
  updated_at: string;
}


// This is used for creating a new Booking (input shape only)
export interface BookingCreateInput {
  client_id: number;
  event_date: string;
  event_type: string;
  price: number;
}
